From e2cdb77d87a9189565ac672975ee72812782eccc Mon Sep 17 00:00:00 2001
From: Nick <nick.cheng@avnet.com>
Date: Tue, 20 Sep 2022 16:06:05 +0800
Subject: [PATCH 21/27] USB-Camera:CODE:RzBoard: Revert the changes in
 videobuf2-core.c

	revert videobuf2-core.c from commit e7daf8c67a0abf520fceafdd8f080fc816fa88a0
	to show the image via usb camera.
	It caused the kernel error due to ENABLE_ISP support.

Signed-off-by: Nick <nick.cheng@avnet.com>
---
 .../media/common/videobuf2/videobuf2-core.c   | 57 ++-----------------
 1 file changed, 6 insertions(+), 51 deletions(-)

diff --git a/drivers/media/common/videobuf2/videobuf2-core.c b/drivers/media/common/videobuf2/videobuf2-core.c
index a650ae5e693b..72350343a56a 100644
--- a/drivers/media/common/videobuf2/videobuf2-core.c
+++ b/drivers/media/common/videobuf2/videobuf2-core.c
@@ -30,15 +30,6 @@
 #include <media/v4l2-mc.h>
 
 #include <trace/events/vb2.h>
-// #ifdef ENABLE_ISP
-#include <linux/isp_ctrl.h>
-//#define VB2_CORE_DEBUG
-#ifdef VB2_CORE_DEBUG
-#define ispprintk(fmt, arg...)		printk(fmt, ##arg)
-#else
-#define ispprintk(fmt, arg...)
-#endif
-// #endif // ENABLE_ISP
 
 static int debug;
 module_param(debug, int, 0644);
@@ -1048,16 +1039,7 @@ void vb2_buffer_done(struct vb2_buffer *vb, enum vb2_buffer_state state)
 		return;
 	default:
 		/* Inform any processes that may be waiting for buffers */
-// #ifdef ENABLE_ISP
-		//wake_up(&q->done_wq);
-		if(ISP_CTRL_RUN==isp_ctrl_get_run_state()){
-			ispprintk("%s: wakeup isp\n", __func__);
-			q_head = &q->done_wq;
-		}else{
-			ispprintk("%s: wakeup without isp\n", __func__);
-			wake_up(&q->done_wq);
-		}
-// #endif // ENABLE_ISP
+		wake_up(&q->done_wq);
 		break;
 	}
 }
@@ -1741,22 +1723,6 @@ int vb2_core_qbuf(struct vb2_queue *q, unsigned int index, void *pb,
 }
 EXPORT_SYMBOL_GPL(vb2_core_qbuf);
 
-// #ifdef ENABLE_ISP
-static int chk_isp_wakeup( const struct list_head *list )
-{
-	int ret = 0;
-	if (!list_empty(list)) {
-		struct vb2_buffer *vb_tmp;
-		vb_tmp = list_first_entry(list, struct vb2_buffer, done_entry);
-		if( isp_ctrl_chk_index_complete(vb_tmp->index) )
-		{
-			ret = 1;
-		}
-	}
-	return ret;
-}
-// #endif // ENABLE_ISP
-
 /*
  * __vb2_wait_for_done_vb() - wait for a buffer to become available
  * for dequeuing
@@ -1797,18 +1763,12 @@ static int __vb2_wait_for_done_vb(struct vb2_queue *q, int nonblocking)
 			return -EPIPE;
 		}
 
-// #ifdef ENABLE_ISP
-//		if (!list_empty(&q->done_list)) {
-//			/*
-//			 * Found a buffer that we were waiting for.
-//			 */
-//			break;
-//		}
-		if( chk_isp_wakeup(&q->done_list) )
-		{
+		if (!list_empty(&q->done_list)) {
+			/*
+			 * Found a buffer that we were waiting for.
+			 */
 			break;
 		}
-// #endif // ENABLE_ISP
 
 		if (nonblocking) {
 			dprintk(q, 3, "nonblocking and no buffers to dequeue, will not wait\n");
@@ -1827,14 +1787,9 @@ static int __vb2_wait_for_done_vb(struct vb2_queue *q, int nonblocking)
 		 * All locks have been released, it is safe to sleep now.
 		 */
 		dprintk(q, 3, "will sleep waiting for buffers\n");
-// #ifdef ENABLE_ISP
-//		ret = wait_event_interruptible(q->done_wq,
-//				!list_empty(&q->done_list) || !q->streaming ||
-//				q->error);
 		ret = wait_event_interruptible(q->done_wq,
-				chk_isp_wakeup(&q->done_list) || !q->streaming ||
+				!list_empty(&q->done_list) || !q->streaming ||
 				q->error);
-// #endif // ENABLE_ISP
 
 		/*
 		 * We need to reevaluate both conditions again after reacquiring
-- 
2.17.1

